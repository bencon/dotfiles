#.then
snippet th "description"
.then((${1:val}) => {
	${2}
})
endsnippet

#.catch
snippet cat "description"
.catch((${1:err}) => {
	${2}
})
endsnippet

#promise
snippet prom "description"
new Promise((resolve${1:, reject}) => {
	${2}
})
endsnippet

#throw default error
snippet thr "description"
throw "someError"
endsnippet

#debugger
snippet de "description"
debugger
endsnippet

#return
snippet r "description"
return
endsnippet

#console log
snippet cl "description"
console.log(${1:here})
endsnippet

#logger log
snippet ll "description"
logger.log('info', \`${1:val}\`)
endsnippet

#require
snippet re "description"
const ${1:lib} = require('${2:lib}')
endsnippet

##########################################################################

#require util
snippet rut "description"
const util = require('util')
endsnippet

#util.inspect
snippet in "description"
util.inspect(${1:val}, {depth:null})
endsnippet

#console log util.inspect
snippet cin "description"
console.log('${1:obj}' + util.inspect(${2:val}, {depth:null}))
endsnippet

#logger log util.inspect
snippet lin "description"
logger.log('info', '${1:obj }' + util.inspect(${2:val}, {depth:null}))
endsnippet

##########################################################################
